[buildout]

# Change the number here to change the version of Plone being used
extends =
    http://dist.plone.org/release/4.3.2/versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
#find-links =

# Add additional eggs here
eggs =
    Plone
    Pillow
    Products.Clouseau
    sbo.policy.general
    sbo.policy.deployment
    sbo.theme
    sbo.inkstain
    sbo.frontpage

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/sbo.policy.general
    src/sbo.policy.deployment
    src/sbo.theme
    src/sbo.inkstain
    src/sbo.frontpage

[versions]

[ports]
instance = 8080
zeo = 8100
instance1 = 8081
instance2 = 8082
haproxy = 8090
varnish = 8888
varnish-adm = 8888
nginx = 8080
supervisor = 9001

[paths]
blob-storage = ${buildout:directory}/var/blobstorage

[users]
zeo =
haproxy =
varnish =
nginx =

[settings]
effective-user =
hostname = sbo.local
user = admin
password = pass

################################################################################
# zope stack
################################################################################

# standalone Zope instance, use for development
[instance]
recipe = plone.recipe.zope2instance
user = ${settings:user}:${settings:password}
http-address = ${ports:instance}
debug-mode = on
verbose-security = on
blob-storage = ${paths:blob-storage}
eggs = ${buildout:eggs}

zcml =
    sbo.policy.deployment

environment-vars =
    zope_i18n_compile_mo_files = true

# zeo cluster, for deployment
[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = 127.0.0.1:${ports:zeo}
effective-user = ${settings:effective-user}
blob-storage = ${paths:blob-storage}
pack-days = 31

[instance1]
recipe = plone.recipe.zope2instance
http-address = ${ports:instance1}
user = admin:pass
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
zodb-cache-size = 4000
zeo-client-cache-size = 50MB
debug-mode = off
verbose-security = off
effective-user = ${settings:effective-user}
eggs = ${buildout:eggs}

zcml =
    sbo.policy.deployment

environment-vars =
    zope_i18n_compile_mo_files = true

[instance2]
<=instance1
http-address = ${ports:instance2}

# necessary for warning-free startup
[fix-blogstorage-permissions]
recipe = collective.recipe.cmd
on_install=true
cmds =
    chmod 700 ${paths:blob-storage}

################################################################################
# other services
################################################################################

# haproxy, used as a load balancer over the two Zope instances
[haproxy-build]
recipe = plone.recipe.haproxy
target = linux26
cpu = generic
pcre = true

[haproxy-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/haproxy.conf.in
output = ${buildout:directory}/etc/haproxy.conf
maxconn = 24000
bind = 127.0.0.1:${ports:haproxy}

# varnish, acting as a reverse lookup caching proxy
[varnish-build]
recipe = zc.recipe.cmmi
url = ${varnish:download-url}

[varnish-config]
recipe = collective.recipe.template
input = varnish.vcl.in
output = ${buildout:directory}/etc/varnish.vcl
backend-host = 127.0.0.1
backend-port = ${ports:haproxy}

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
mode = foreground
config = ${varnish-config:output}
effective-user = ${settings:effective-user}
bind = 127.0.0.1:${ports:varnish}
cache-size = 512M
telnet = ${ports:varnish-adm}

# nginx, for virtual host handling
[nginx-build]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.0.8.tar.gz

[nginx]
recipe = gocept.nginx
nginx = nginx-build
configuration =
    error_log ${buildout:directory}/var/log/nginx-error.log warn;
    user ${settings:effective-user};
    worker_processes 1;
    daemon off;
    events {
        worker_connections 1024;
    }
    http {
        upstream cache {
            server localhost:${ports:varnish};
        }
        server {
            listen *:${ports:nginx};
            server_name www.${settings:hostname};
            rewrite ^(.*) http://${settings:hostname}$1 permanent;
        }
        server {
            listen *:${ports:nginx};
            server_name ${settings:hostname};
            access_log ${buildout:directory}/var/log/nginx-plone-access.log;
            rewrite ^/(.*)  /VirtualHostBase/http/${settings:hostname}:${ports:nginx}/sbo/VirtualHostRoot/$1 last;
            location / {
                proxy_pass http://cache;
            }
        }
    }

# supervisor, one to rule them all
[supervisor]
recipe = collective.recipe.supervisor
plugins = superlance
port = ${ports:supervisor}
user = ${settings:user}
password = ${settings:password}
programs =
    10 zeoserver ${zeoserver:location}/bin/runzeo true
    20 instance1 (startsecs=180) ${buildout:directory}/bin/instance1 [console] true
    20 instance2 (startsecs=180) ${buildout:directory}/bin/instance2 [console] true
    30 haproxy   ${buildout:directory}/bin/haproxy [-f ${haproxy-conf:output} -db] true ${settings:effective-user}
    40 varnish   ${buildout:directory}/bin/varnish true
    50 nginx      ${nginx-build:location}/sbin/nginx [-c ${nginx:run-directory}/nginx.conf] true
eventlisteners =
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance1=200MB -p instance2=200MB]
    HttpOk1 TICK_60 ${buildout:bin-directory}/httpok [-p instance1 -t 10 http://localhost:${ports:instance1}/]
    HttpOk2 TICK_60 ${buildout:bin-directory}/httpok [-p instance2 -t 10 http://localhost:${ports:instance2}/]
groups =
    10 zeo-cluster zeoserver,instance1,instance2
    20 other       haproxy,varnish,nginx

[supervisor-without-nginx]
recipe = collective.recipe.supervisor
plugins = superlance
port = ${ports:supervisor}
user = ${settings:user}
password = ${settings:password}
programs =
    10 zeoserver ${zeoserver:location}/bin/runzeo true
    20 instance1 (startsecs=180) ${buildout:directory}/bin/instance1 [console] true
    20 instance2 (startsecs=180) ${buildout:directory}/bin/instance2 [console] true
    30 haproxy   ${buildout:directory}/bin/haproxy [-f ${haproxy-conf:output} -db] true ${settings:effective-user}
    40 varnish   ${buildout:directory}/bin/varnish true
eventlisteners =
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance1=200MB -p instance2=200MB]
    HttpOk1 TICK_60 ${buildout:bin-directory}/httpok [-p instance1 -t 10 http://localhost:${ports:instance1}/]
    HttpOk2 TICK_60 ${buildout:bin-directory}/httpok [-p instance2 -t 10 http://localhost:${ports:instance2}/]
groups =
    10 zeo-cluster zeoserver,instance1,instance2
    20 other       haproxy,varnish

################################################################################
# maintenance and backup
################################################################################

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[backup]
recipe = collective.recipe.backup
keep = 3

[backup-cronjob]
recipe = z3c.recipe.usercrontab
times = 0 3 * * *
command = ${buildout:bin-directory}/backup -q

[zeopack-cronjob]
recipe = z3c.recipe.usercrontab
times = 0 2 * * *
command = ${buildout:bin-directory}/zeopack

################################################################################
# development tools
################################################################################

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
packages = ./
